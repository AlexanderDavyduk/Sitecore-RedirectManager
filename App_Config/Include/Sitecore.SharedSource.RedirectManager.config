<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
    <sitecore>
	
      <settings>
				<!-- EnableLogging setting uses for writing information about the module work and errors to the log file. -->
				<setting name="Sitecore.SharedSource.RedirectManager.EnableLogging" value="true" />
				
				<!-- EnableNotFounds setting uses for writing information about not founf pages to log file. -->
				<setting name="Sitecore.SharedSource.RedirectManager.EnableNotFounds" value="true" />
				
				<!-- Enabled setting enable or disable the redirect module. -->
				<setting name="Sitecore.SharedSource.RedirectManager.Enabled" value="true" />
				
				<!-- Database setting set the database which will be used for getting the redirects items. -->
				<setting name="Sitecore.SharedSource.RedirectManager.Database" value="master" />
				
				<!-- RedirectStatusCode setting contain the redirect status code which will be used for redirecting. -->
				<setting name="Sitecore.SharedSource.RedirectManager.RedirectStatusCode" value="301" />
				
				<!-- CheckDuplicates setting uses for protection from duplicated when the list with redirects is creating. -->
				<setting name="Sitecore.SharedSource.RedirectManager.CheckDuplicates" value="false" />
				
				<!-- UrlValidation setting - regexp for the base field of redirect module templates. -->
				<setting name="Sitecore.SharedSource.RedirectManager.UrlValidation" value="\/[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])*(:(0-9)*)*(\/?)([a-zA-Z0-9\-\.\?\,\'\/\\\+&amp;%\$#_]*)?$" />
				
				<!-- ValidationErrorMessage setting contain the error message for the validation rule. -->
				<setting name="Sitecore.SharedSource.RedirectManager.ValidationErrorMessage" value="Url is not valid" />
				
				<!-- CheckPresentation indicating whether we need to check presentation for target items and create redirects only for items with presentation. -->
				<setting name="Sitecore.SharedSource.RedirectManager.CheckPresentation" value="true" />
				
				<!-- IgnorePages setting contain pages which should be ignored by redirect module. Use '|' to divede the pages. -->
				<setting name="Sitecore.SharedSource.RedirectManager.IgnorePages" value="/combres|/combres.axd|/sitecore/default.aspx|/trace.axd|/webresource.axd|/sitecore/shell/Controls/Rich Text Editor/Telerik.Web.UI.DialogHandler.aspx|/sitecore/shell/applications/content manager/telerik.web.ui.dialoghandler.aspx|/sitecore/shell/Controls/Rich Text Editor/Telerik.Web.UI.SpellCheckHandler.axd|/Telerik.Web.UI.WebResource.axd|/sitecore/admin/upgrade/|/layouts/testing|/elmah.axd|/layouts/system/|/sitecore modules/|/boost/|/coveo/|/api/|/healthmonitor/" />
				
				<!-- EnableCyclingProtection setting uses to enable or disable the protection from cycling -->
				<setting name="Sitecore.SharedSource.RedirectManager.EnableCyclingProtection" value="true" />
				
				<!-- RecursiveAttempts setting contain the admissible number of cycles for the redirect module -->
				<setting name="Sitecore.SharedSource.RedirectManager.RecursiveAttempts" value="3" />
				
				<!-- EnableMultisites setting uses for enabling or disabling multisites settings -->
				<setting name="Sitecore.SharedSource.RedirectManager.EnableMultisites" value="true" />
				
				<!-- RemovalDate setting indicates which redirects will be removed if they are not used for some period (in days) -->
				<setting name="Sitecore.SharedSource.RedirectManager.RemovalDate" value="60" />
		</settings>

        <pipelines>
            <httpRequestBegin>
                <processor type="Sitecore.SharedSource.RedirectManager.Pipelines.Redirector, Sitecore.SharedSource.RedirectManager" patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" />
            </httpRequestBegin>
        </pipelines>
		
		<events>
			<event name="item:saved">
				<handler type="Sitecore.SharedSource.RedirectManager.RedirectItemEventHandler, Sitecore.SharedSource.RedirectManager" method="OnItemSaved" />
			</event>
			<event name="item:deleted">
				<handler type="Sitecore.SharedSource.RedirectManager.RedirectItemEventHandler, Sitecore.SharedSource.RedirectManager" method="OnItemDeleted" />
			</event>
			<event name="item:saved:remote">
				<handler type="Sitecore.SharedSource.RedirectManager.RedirectItemEventHandler, Sitecore.SharedSource.RedirectManager" method="OnItemSavedRemote" />
			</event>
			<event name="item:deleted:remote">
				<handler type="Sitecore.SharedSource.RedirectManager.RedirectItemEventHandler, Sitecore.SharedSource.RedirectManager" method="OnItemDeletedRemote" />
			</event>
		</events>
		<commands>
			<!--Command for removing old redirects-->
			<command name="contenteditor:removeredirects" type="Sitecore.SharedSource.RedirectManager.Editors.RemoveRedirects, Sitecore.SharedSource.RedirectManager"/>
		</commands>
		
    </sitecore>

</configuration>
